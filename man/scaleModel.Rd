% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/manipulateParams.R
\name{scaleModel}
\alias{scaleModel}
\title{Rescale System}
\usage{
scaleModel(params, factor)
}
\arguments{
\item{params}{A mizer params object}

\item{factor}{The factor by which the size is rescaled with respect to which
the abundances are given.}
}
\value{
An object of type \linkS4class{MizerParams}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

The abundances in mizer and some rates depend on the size of the area to
which they refer. So they could be given per square meter or per square
kilometer or for an entire study area or any other choice of yours. This
function allows you to change the size by automatically changing the
abundances and rates accordingly.
}
\details{
If you rescale the system by a factor \eqn{c} then this function makes the
following rescalings in the params object:
\itemize{
\item The initial abundances \code{initial_n}, \code{initial_n_pp} and
\code{initial_n_other} are rescaled by \eqn{c}.
\item The search volume is rescaled by \eqn{1/c}.
\item The resource carrying capacity is rescaled by \eqn{c}
\item The maximum reproduction rate \eqn{R_{max}}, if used, is rescaled by
\eqn{c}.
}
The effect of this is that the dynamics of the rescaled system are identical
to those of the unscaled system, in the sense that it does not matter whether
one first calls \code{\link[=scaleModel]{scaleModel()}} and then runs a simulation with
\code{\link[=project]{project()}} or whether one first runs a simulation and then rescales the
resulting abundances.

Note that if you use non-standard resource dynamics or other components then you
may need to rescale additional parameters that appear in those dynamics.
}
